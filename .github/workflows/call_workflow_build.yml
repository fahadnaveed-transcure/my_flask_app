name: CI/CD for Docker Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

 

jobs:
  call-workflow-Build-Docker:
    needs: [lint, test]
    uses: ./.github/workflows/dockerbuild.yml
    with:
      branch: ${{github.ref_name}}
    secrets:
      docker_user: ${{ secrets.DOCKER_USERNAME }}
      docker_pass: ${{ secrets.DOCKER_PASSWORD }}
      
  lint:
    name: Lint with flake8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip dependencies
      id: pip-cache  # <-- We assign an ID to reference later
      uses: actions/cache@v3
      with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
    - name: Install dependencies
      
      #install --upgrade pip: Tells pip to install the latest version of itself.
      #Using python -m pip makes sure the pip used matches the python you're running.
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Run flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Run tests
      run: |
        pytest #test run1

  testoutput:
    needs: call-workflow-Build-Docker
    runs-on: ubuntu-latest
    steps:
      - name: Use image tag from build workflow
        run: |
          echo "Image tag is ${{ needs.call-workflow-Build-Docker.image_tag }}"
          echo "Image tag is ${{ needs.call-workflow-Build-Docker.image_tag }}" >> name.txt

      - name: to upload artifact
        uses: actions/upload-artifact@v4
                   
        with:
          name: artifact-caller
          path: |
            world.txt
